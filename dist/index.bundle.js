"use strict";(self.webpackChunkto_do_list=self.webpackChunkto_do_list||[]).push([[826],{426:(n,r,e)=>{e.d(r,{Z:()=>m});var t=e(537),o=e.n(t),A=e(645),i=e.n(A),a=e(667),s=e.n(a),c=new URL(e(853),e.b),d=new URL(e(513),e.b),l=new URL(e(387),e.b),p=i()(o()),u=s()(c),f=s()(d),E=s()(l);p.push([n.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: serif, monospace;\r\n}\r\n\r\ninput {\r\n  padding: 0.5rem;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  width: 40%;\r\n  min-width: 500px;\r\n  min-height: 500px;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 20px #666;\r\n  border-radius: 2px;\r\n  position: absolute;\r\n  top: 20vh;\r\n  left: 30vw;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n/* header */\r\n\r\n.heading {\r\n  padding: 15px 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.heading p {\r\n  font-size: 1.25rem;\r\n  color: #444;\r\n  text-shadow: -1px 0 5px #d1cece;\r\n}\r\n\r\n.add-item {\r\n  padding: 15px 10px;\r\n  border-bottom: 1px solid #ddd;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.add-item input {\r\n  border: none;\r\n  cursor: default;\r\n  font-size: 1.2rem;\r\n  font-style: italic;\r\n  flex: 1;\r\n}\r\n\r\n.task input {\r\n  font-family: sans-serif, monospace;\r\n  border: none;\r\n  cursor: default;\r\n  text-shadow: -1px 0 5px #d1cece;\r\n}\r\n\r\n/* list */\r\n.to-do-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.list-item {\r\n  padding: 15px 10px;\r\n  font-size: 1.1rem;\r\n  color: #444;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.list-item .cross {\r\n  display: block;\r\n  background: url("+u+") no-repeat center center/cover;\r\n  height: 21px;\r\n  width: 21px;\r\n  filter: invert(0.5);\r\n  cursor: move;\r\n}\r\n\r\n.reset-i {\r\n  display: block;\r\n  background: url("+f+") no-repeat center center/cover;\r\n  height: 21px;\r\n  width: 21px;\r\n  cursor: move;\r\n}\r\n\r\n.return-i {\r\n  display: block;\r\n  background: url("+E+") no-repeat center center/cover;\r\n  height: 10px;\r\n  width: 10px;\r\n  filter: invert(0.5);\r\n  cursor: move;\r\n}\r\n\r\n.task {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.task-description {\r\n  flex: 1;\r\n}\r\n\r\n.completed .task-description {\r\n  text-decoration: line-through;\r\n  color: #666;\r\n}\r\n\r\n/* footer */\r\n\r\n.footer {\r\n  padding: 15px 10px;\r\n  text-align: center;\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.footer a {\r\n  text-decoration: none;\r\n  color: #777;\r\n}\r\n\r\n.footer a:hover {\r\n  color: #444;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,6BAA6B;AAC/B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,YAAY;EACZ,UAAU;EACV,gBAAgB;EAChB,iBAAiB;EACjB,sBAAsB;EACtB,yBAAyB;EACzB,kBAAkB;EAClB,kBAAkB;EAClB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA,WAAW;;AAEX;EACE,kBAAkB;EAClB,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,+BAA+B;AACjC;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,OAAO;AACT;;AAEA;EACE,kCAAkC;EAClC,YAAY;EACZ,eAAe;EACf,+BAA+B;AACjC;;AAEA,SAAS;AACT;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,8BAA8B;EAC9B,6BAA6B;AAC/B;;AAEA;EACE,cAAc;EACd,iFAAyE;EACzE,YAAY;EACZ,WAAW;EACX,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,cAAc;EACd,iFAAsE;EACtE,YAAY;EACZ,WAAW;EACX,YAAY;AACd;;AAEA;EACE,cAAc;EACd,iFAAuE;EACvE,YAAY;EACZ,WAAW;EACX,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,OAAO;EACP,aAAa;EACb,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,6BAA6B;EAC7B,WAAW;AACb;;AAEA,WAAW;;AAEX;EACE,kBAAkB;EAClB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,qBAAqB;EACrB,WAAW;AACb;;AAEA;EACE,WAAW;AACb",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: serif, monospace;\r\n}\r\n\r\ninput {\r\n  padding: 0.5rem;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  width: 40%;\r\n  min-width: 500px;\r\n  min-height: 500px;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 20px #666;\r\n  border-radius: 2px;\r\n  position: absolute;\r\n  top: 20vh;\r\n  left: 30vw;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n/* header */\r\n\r\n.heading {\r\n  padding: 15px 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.heading p {\r\n  font-size: 1.25rem;\r\n  color: #444;\r\n  text-shadow: -1px 0 5px #d1cece;\r\n}\r\n\r\n.add-item {\r\n  padding: 15px 10px;\r\n  border-bottom: 1px solid #ddd;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.add-item input {\r\n  border: none;\r\n  cursor: default;\r\n  font-size: 1.2rem;\r\n  font-style: italic;\r\n  flex: 1;\r\n}\r\n\r\n.task input {\r\n  font-family: sans-serif, monospace;\r\n  border: none;\r\n  cursor: default;\r\n  text-shadow: -1px 0 5px #d1cece;\r\n}\r\n\r\n/* list */\r\n.to-do-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.list-item {\r\n  padding: 15px 10px;\r\n  font-size: 1.1rem;\r\n  color: #444;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.list-item .cross {\r\n  display: block;\r\n  background: url(./assets/verticle-menu.png) no-repeat center center/cover;\r\n  height: 21px;\r\n  width: 21px;\r\n  filter: invert(0.5);\r\n  cursor: move;\r\n}\r\n\r\n.reset-i {\r\n  display: block;\r\n  background: url(./assets/reset-icon.png) no-repeat center center/cover;\r\n  height: 21px;\r\n  width: 21px;\r\n  cursor: move;\r\n}\r\n\r\n.return-i {\r\n  display: block;\r\n  background: url(./assets/return-icon.png) no-repeat center center/cover;\r\n  height: 10px;\r\n  width: 10px;\r\n  filter: invert(0.5);\r\n  cursor: move;\r\n}\r\n\r\n.task {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.task-description {\r\n  flex: 1;\r\n}\r\n\r\n.completed .task-description {\r\n  text-decoration: line-through;\r\n  color: #666;\r\n}\r\n\r\n/* footer */\r\n\r\n.footer {\r\n  padding: 15px 10px;\r\n  text-align: center;\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.footer a {\r\n  text-decoration: none;\r\n  color: #777;\r\n}\r\n\r\n.footer a:hover {\r\n  color: #444;\r\n}\r\n"],sourceRoot:""}]);const m=p},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);t&&i[d[0]]||(void 0!==A&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=A),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),A="/*# ".concat(o," */");return[r].concat([A]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var A={},i=[],a=0;a<n.length;a++){var s=n[a],c=t.base?s[0]+t.base:s[0],d=A[c]||0,l="".concat(c," ").concat(d);A[c]=d+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var f=o(u,t);t.byIndex=a,r.splice(a,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var A=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=e(A[i]);r[a].references--}for(var s=t(n,o),c=0;c<A.length;c++){var d=e(A[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}A=s}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var A=e.sourceMap;A&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},451:(n,r,e)=>{var t=e(379),o=e.n(t),A=e(795),i=e.n(A),a=e(569),s=e.n(a),c=e(565),d=e.n(c),l=e(216),p=e.n(l),u=e(589),f=e.n(u),E=e(426),m={};m.styleTagTransform=f(),m.setAttributes=d(),m.insert=s().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=p(),o()(E.Z,m),E.Z&&E.Z.locals&&E.Z.locals;(class{constructor(n,r){this.task=n,this.index=r}static taskList=[{description:"Clean the house",completed:!1,index:0},{description:"Buy groceries",completed:!0,index:1},{description:"Do laundry",completed:!1,index:2}]}).taskList.sort(((n,r)=>n.index-r.index)).forEach((n=>{const r=document.querySelector(".to-do-list"),e=document.createElement("div");e.classList.add("list-item");const t=document.createElement("div");t.classList.add("task");const o=document.createElement("input");o.setAttribute("type","checkbox"),n.completed&&(o.setAttribute("checked",""),e.classList.toggle("completed"));const A=document.createElement("input");A.setAttribute("type","text"),A.classList.add("task-description"),A.value=n.description;const i=document.createElement("i");i.classList.add("cross"),t.appendChild(o),t.appendChild(A),t.appendChild(i),e.appendChild(t),r.appendChild(e)}))},513:(n,r,e)=>{n.exports=e.p+"d3f95cd01e203ac67f1b.png"},387:(n,r,e)=>{n.exports=e.p+"fa544f635765db738d2e.png"},853:(n,r,e)=>{n.exports=e.p+"5503806f9a9cffbe0dae.png"}},n=>{n(n.s=451)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,